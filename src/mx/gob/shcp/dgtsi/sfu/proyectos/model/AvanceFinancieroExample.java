package mx.gob.shcp.dgtsi.sfu.proyectos.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AvanceFinancieroExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public AvanceFinancieroExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdAvanceFinancieroIsNull() {
            addCriterion("ID_AVANCE_FINANCIERO is null");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroIsNotNull() {
            addCriterion("ID_AVANCE_FINANCIERO is not null");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroEqualTo(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO =", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroNotEqualTo(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO <>", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroGreaterThan(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO >", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO >=", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroLessThan(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO <", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroLessThanOrEqualTo(Integer value) {
            addCriterion("ID_AVANCE_FINANCIERO <=", value, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroIn(List<Integer> values) {
            addCriterion("ID_AVANCE_FINANCIERO in", values, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroNotIn(List<Integer> values) {
            addCriterion("ID_AVANCE_FINANCIERO not in", values, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroBetween(Integer value1, Integer value2) {
            addCriterion("ID_AVANCE_FINANCIERO between", value1, value2, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andIdAvanceFinancieroNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_AVANCE_FINANCIERO not between", value1, value2, "idAvanceFinanciero");
            return (Criteria) this;
        }

        public Criteria andPeriodoIsNull() {
            addCriterion("PERIODO is null");
            return (Criteria) this;
        }

        public Criteria andPeriodoIsNotNull() {
            addCriterion("PERIODO is not null");
            return (Criteria) this;
        }

        public Criteria andPeriodoEqualTo(String value) {
            addCriterion("PERIODO =", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoNotEqualTo(String value) {
            addCriterion("PERIODO <>", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoGreaterThan(String value) {
            addCriterion("PERIODO >", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoGreaterThanOrEqualTo(String value) {
            addCriterion("PERIODO >=", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoLessThan(String value) {
            addCriterion("PERIODO <", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoLessThanOrEqualTo(String value) {
            addCriterion("PERIODO <=", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoLike(String value) {
            addCriterion("PERIODO like", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoNotLike(String value) {
            addCriterion("PERIODO not like", value, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoIn(List<String> values) {
            addCriterion("PERIODO in", values, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoNotIn(List<String> values) {
            addCriterion("PERIODO not in", values, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoBetween(String value1, String value2) {
            addCriterion("PERIODO between", value1, value2, "periodo");
            return (Criteria) this;
        }

        public Criteria andPeriodoNotBetween(String value1, String value2) {
            addCriterion("PERIODO not between", value1, value2, "periodo");
            return (Criteria) this;
        }

        public Criteria andCicloIsNull() {
            addCriterion("CICLO is null");
            return (Criteria) this;
        }

        public Criteria andCicloIsNotNull() {
            addCriterion("CICLO is not null");
            return (Criteria) this;
        }

        public Criteria andCicloEqualTo(Short value) {
            addCriterion("CICLO =", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloNotEqualTo(Short value) {
            addCriterion("CICLO <>", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloGreaterThan(Short value) {
            addCriterion("CICLO >", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloGreaterThanOrEqualTo(Short value) {
            addCriterion("CICLO >=", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloLessThan(Short value) {
            addCriterion("CICLO <", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloLessThanOrEqualTo(Short value) {
            addCriterion("CICLO <=", value, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloIn(List<Short> values) {
            addCriterion("CICLO in", values, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloNotIn(List<Short> values) {
            addCriterion("CICLO not in", values, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloBetween(Short value1, Short value2) {
            addCriterion("CICLO between", value1, value2, "ciclo");
            return (Criteria) this;
        }

        public Criteria andCicloNotBetween(Short value1, Short value2) {
            addCriterion("CICLO not between", value1, value2, "ciclo");
            return (Criteria) this;
        }

        public Criteria andModificadoIsNull() {
            addCriterion("MODIFICADO is null");
            return (Criteria) this;
        }

        public Criteria andModificadoIsNotNull() {
            addCriterion("MODIFICADO is not null");
            return (Criteria) this;
        }

        public Criteria andModificadoEqualTo(BigDecimal value) {
            addCriterion("MODIFICADO =", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoNotEqualTo(BigDecimal value) {
            addCriterion("MODIFICADO <>", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoGreaterThan(BigDecimal value) {
            addCriterion("MODIFICADO >", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFICADO >=", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoLessThan(BigDecimal value) {
            addCriterion("MODIFICADO <", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MODIFICADO <=", value, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoIn(List<BigDecimal> values) {
            addCriterion("MODIFICADO in", values, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoNotIn(List<BigDecimal> values) {
            addCriterion("MODIFICADO not in", values, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFICADO between", value1, value2, "modificado");
            return (Criteria) this;
        }

        public Criteria andModificadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MODIFICADO not between", value1, value2, "modificado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoIsNull() {
            addCriterion("RECAUDADO is null");
            return (Criteria) this;
        }

        public Criteria andRecaudadoIsNotNull() {
            addCriterion("RECAUDADO is not null");
            return (Criteria) this;
        }

        public Criteria andRecaudadoEqualTo(BigDecimal value) {
            addCriterion("RECAUDADO =", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoNotEqualTo(BigDecimal value) {
            addCriterion("RECAUDADO <>", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoGreaterThan(BigDecimal value) {
            addCriterion("RECAUDADO >", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECAUDADO >=", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoLessThan(BigDecimal value) {
            addCriterion("RECAUDADO <", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECAUDADO <=", value, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoIn(List<BigDecimal> values) {
            addCriterion("RECAUDADO in", values, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoNotIn(List<BigDecimal> values) {
            addCriterion("RECAUDADO not in", values, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECAUDADO between", value1, value2, "recaudado");
            return (Criteria) this;
        }

        public Criteria andRecaudadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECAUDADO not between", value1, value2, "recaudado");
            return (Criteria) this;
        }

        public Criteria andComprometidoIsNull() {
            addCriterion("COMPROMETIDO is null");
            return (Criteria) this;
        }

        public Criteria andComprometidoIsNotNull() {
            addCriterion("COMPROMETIDO is not null");
            return (Criteria) this;
        }

        public Criteria andComprometidoEqualTo(BigDecimal value) {
            addCriterion("COMPROMETIDO =", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoNotEqualTo(BigDecimal value) {
            addCriterion("COMPROMETIDO <>", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoGreaterThan(BigDecimal value) {
            addCriterion("COMPROMETIDO >", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("COMPROMETIDO >=", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoLessThan(BigDecimal value) {
            addCriterion("COMPROMETIDO <", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("COMPROMETIDO <=", value, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoIn(List<BigDecimal> values) {
            addCriterion("COMPROMETIDO in", values, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoNotIn(List<BigDecimal> values) {
            addCriterion("COMPROMETIDO not in", values, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMPROMETIDO between", value1, value2, "comprometido");
            return (Criteria) this;
        }

        public Criteria andComprometidoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("COMPROMETIDO not between", value1, value2, "comprometido");
            return (Criteria) this;
        }

        public Criteria andDevengadoIsNull() {
            addCriterion("DEVENGADO is null");
            return (Criteria) this;
        }

        public Criteria andDevengadoIsNotNull() {
            addCriterion("DEVENGADO is not null");
            return (Criteria) this;
        }

        public Criteria andDevengadoEqualTo(BigDecimal value) {
            addCriterion("DEVENGADO =", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoNotEqualTo(BigDecimal value) {
            addCriterion("DEVENGADO <>", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoGreaterThan(BigDecimal value) {
            addCriterion("DEVENGADO >", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("DEVENGADO >=", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoLessThan(BigDecimal value) {
            addCriterion("DEVENGADO <", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("DEVENGADO <=", value, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoIn(List<BigDecimal> values) {
            addCriterion("DEVENGADO in", values, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoNotIn(List<BigDecimal> values) {
            addCriterion("DEVENGADO not in", values, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DEVENGADO between", value1, value2, "devengado");
            return (Criteria) this;
        }

        public Criteria andDevengadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("DEVENGADO not between", value1, value2, "devengado");
            return (Criteria) this;
        }

        public Criteria andEjercidoIsNull() {
            addCriterion("EJERCIDO is null");
            return (Criteria) this;
        }

        public Criteria andEjercidoIsNotNull() {
            addCriterion("EJERCIDO is not null");
            return (Criteria) this;
        }

        public Criteria andEjercidoEqualTo(BigDecimal value) {
            addCriterion("EJERCIDO =", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoNotEqualTo(BigDecimal value) {
            addCriterion("EJERCIDO <>", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoGreaterThan(BigDecimal value) {
            addCriterion("EJERCIDO >", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("EJERCIDO >=", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoLessThan(BigDecimal value) {
            addCriterion("EJERCIDO <", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("EJERCIDO <=", value, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoIn(List<BigDecimal> values) {
            addCriterion("EJERCIDO in", values, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoNotIn(List<BigDecimal> values) {
            addCriterion("EJERCIDO not in", values, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EJERCIDO between", value1, value2, "ejercido");
            return (Criteria) this;
        }

        public Criteria andEjercidoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("EJERCIDO not between", value1, value2, "ejercido");
            return (Criteria) this;
        }

        public Criteria andPagadoIsNull() {
            addCriterion("PAGADO is null");
            return (Criteria) this;
        }

        public Criteria andPagadoIsNotNull() {
            addCriterion("PAGADO is not null");
            return (Criteria) this;
        }

        public Criteria andPagadoEqualTo(BigDecimal value) {
            addCriterion("PAGADO =", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoNotEqualTo(BigDecimal value) {
            addCriterion("PAGADO <>", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoGreaterThan(BigDecimal value) {
            addCriterion("PAGADO >", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("PAGADO >=", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoLessThan(BigDecimal value) {
            addCriterion("PAGADO <", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("PAGADO <=", value, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoIn(List<BigDecimal> values) {
            addCriterion("PAGADO in", values, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoNotIn(List<BigDecimal> values) {
            addCriterion("PAGADO not in", values, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAGADO between", value1, value2, "pagado");
            return (Criteria) this;
        }

        public Criteria andPagadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("PAGADO not between", value1, value2, "pagado");
            return (Criteria) this;
        }

        public Criteria andFechaIsNull() {
            addCriterion("FECHA is null");
            return (Criteria) this;
        }

        public Criteria andFechaIsNotNull() {
            addCriterion("FECHA is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA =", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA <>", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThan(Date value) {
            addCriterionForJDBCDate("FECHA >", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA >=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThan(Date value) {
            addCriterionForJDBCDate("FECHA <", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA <=", value, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA not in", values, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA between", value1, value2, "fecha");
            return (Criteria) this;
        }

        public Criteria andFechaNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA not between", value1, value2, "fecha");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 09 18:10:57 CDT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table AVANCE_FINANCIERO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}