package mx.gob.shcp.dgtsi.sfu.proyectos.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProyectoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public ProyectoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdProyectoIsNull() {
            addCriterion("ID_PROYECTO is null");
            return (Criteria) this;
        }

        public Criteria andIdProyectoIsNotNull() {
            addCriterion("ID_PROYECTO is not null");
            return (Criteria) this;
        }

        public Criteria andIdProyectoEqualTo(Integer value) {
            addCriterion("ID_PROYECTO =", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoNotEqualTo(Integer value) {
            addCriterion("ID_PROYECTO <>", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoGreaterThan(Integer value) {
            addCriterion("ID_PROYECTO >", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_PROYECTO >=", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoLessThan(Integer value) {
            addCriterion("ID_PROYECTO <", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoLessThanOrEqualTo(Integer value) {
            addCriterion("ID_PROYECTO <=", value, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoIn(List<Integer> values) {
            addCriterion("ID_PROYECTO in", values, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoNotIn(List<Integer> values) {
            addCriterion("ID_PROYECTO not in", values, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoBetween(Integer value1, Integer value2) {
            addCriterion("ID_PROYECTO between", value1, value2, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andIdProyectoNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_PROYECTO not between", value1, value2, "idProyecto");
            return (Criteria) this;
        }

        public Criteria andFolioIsNull() {
            addCriterion("FOLIO is null");
            return (Criteria) this;
        }

        public Criteria andFolioIsNotNull() {
            addCriterion("FOLIO is not null");
            return (Criteria) this;
        }

        public Criteria andFolioEqualTo(String value) {
            addCriterion("FOLIO =", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioNotEqualTo(String value) {
            addCriterion("FOLIO <>", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioGreaterThan(String value) {
            addCriterion("FOLIO >", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioGreaterThanOrEqualTo(String value) {
            addCriterion("FOLIO >=", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioLessThan(String value) {
            addCriterion("FOLIO <", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioLessThanOrEqualTo(String value) {
            addCriterion("FOLIO <=", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioLike(String value) {
            addCriterion("FOLIO like", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioNotLike(String value) {
            addCriterion("FOLIO not like", value, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioIn(List<String> values) {
            addCriterion("FOLIO in", values, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioNotIn(List<String> values) {
            addCriterion("FOLIO not in", values, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioBetween(String value1, String value2) {
            addCriterion("FOLIO between", value1, value2, "folio");
            return (Criteria) this;
        }

        public Criteria andFolioNotBetween(String value1, String value2) {
            addCriterion("FOLIO not between", value1, value2, "folio");
            return (Criteria) this;
        }

        public Criteria andNombreIsNull() {
            addCriterion("NOMBRE is null");
            return (Criteria) this;
        }

        public Criteria andNombreIsNotNull() {
            addCriterion("NOMBRE is not null");
            return (Criteria) this;
        }

        public Criteria andNombreEqualTo(String value) {
            addCriterion("NOMBRE =", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotEqualTo(String value) {
            addCriterion("NOMBRE <>", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThan(String value) {
            addCriterion("NOMBRE >", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreGreaterThanOrEqualTo(String value) {
            addCriterion("NOMBRE >=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThan(String value) {
            addCriterion("NOMBRE <", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLessThanOrEqualTo(String value) {
            addCriterion("NOMBRE <=", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreLike(String value) {
            addCriterion("NOMBRE like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotLike(String value) {
            addCriterion("NOMBRE not like", value, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreIn(List<String> values) {
            addCriterion("NOMBRE in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotIn(List<String> values) {
            addCriterion("NOMBRE not in", values, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreBetween(String value1, String value2) {
            addCriterion("NOMBRE between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andNombreNotBetween(String value1, String value2) {
            addCriterion("NOMBRE not between", value1, value2, "nombre");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraIsNull() {
            addCriterion("INST_EJECUTORA is null");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraIsNotNull() {
            addCriterion("INST_EJECUTORA is not null");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraEqualTo(String value) {
            addCriterion("INST_EJECUTORA =", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraNotEqualTo(String value) {
            addCriterion("INST_EJECUTORA <>", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraGreaterThan(String value) {
            addCriterion("INST_EJECUTORA >", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraGreaterThanOrEqualTo(String value) {
            addCriterion("INST_EJECUTORA >=", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraLessThan(String value) {
            addCriterion("INST_EJECUTORA <", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraLessThanOrEqualTo(String value) {
            addCriterion("INST_EJECUTORA <=", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraLike(String value) {
            addCriterion("INST_EJECUTORA like", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraNotLike(String value) {
            addCriterion("INST_EJECUTORA not like", value, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraIn(List<String> values) {
            addCriterion("INST_EJECUTORA in", values, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraNotIn(List<String> values) {
            addCriterion("INST_EJECUTORA not in", values, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraBetween(String value1, String value2) {
            addCriterion("INST_EJECUTORA between", value1, value2, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andInstEjecutoraNotBetween(String value1, String value2) {
            addCriterion("INST_EJECUTORA not between", value1, value2, "instEjecutora");
            return (Criteria) this;
        }

        public Criteria andFechaInicialIsNull() {
            addCriterion("FECHA_INICIAL is null");
            return (Criteria) this;
        }

        public Criteria andFechaInicialIsNotNull() {
            addCriterion("FECHA_INICIAL is not null");
            return (Criteria) this;
        }

        public Criteria andFechaInicialEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL =", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialNotEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL <>", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialGreaterThan(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL >", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL >=", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialLessThan(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL <", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_INICIAL <=", value, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_INICIAL in", values, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialNotIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_INICIAL not in", values, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_INICIAL between", value1, value2, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaInicialNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_INICIAL not between", value1, value2, "fechaInicial");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalIsNull() {
            addCriterion("FECHA_ESTIMADA_FINAL is null");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalIsNotNull() {
            addCriterion("FECHA_ESTIMADA_FINAL is not null");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL =", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalNotEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL <>", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalGreaterThan(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL >", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL >=", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalLessThan(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL <", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL <=", value, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL in", values, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalNotIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL not in", values, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL between", value1, value2, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaEstimadaFinalNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_ESTIMADA_FINAL not between", value1, value2, "fechaEstimadaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalIsNull() {
            addCriterion("FECHA_FINAL is null");
            return (Criteria) this;
        }

        public Criteria andFechaFinalIsNotNull() {
            addCriterion("FECHA_FINAL is not null");
            return (Criteria) this;
        }

        public Criteria andFechaFinalEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL =", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalNotEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL <>", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalGreaterThan(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL >", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL >=", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalLessThan(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL <", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("FECHA_FINAL <=", value, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_FINAL in", values, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalNotIn(List<Date> values) {
            addCriterionForJDBCDate("FECHA_FINAL not in", values, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_FINAL between", value1, value2, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andFechaFinalNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("FECHA_FINAL not between", value1, value2, "fechaFinal");
            return (Criteria) this;
        }

        public Criteria andDireccionIsNull() {
            addCriterion("DIRECCION is null");
            return (Criteria) this;
        }

        public Criteria andDireccionIsNotNull() {
            addCriterion("DIRECCION is not null");
            return (Criteria) this;
        }

        public Criteria andDireccionEqualTo(String value) {
            addCriterion("DIRECCION =", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionNotEqualTo(String value) {
            addCriterion("DIRECCION <>", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionGreaterThan(String value) {
            addCriterion("DIRECCION >", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionGreaterThanOrEqualTo(String value) {
            addCriterion("DIRECCION >=", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionLessThan(String value) {
            addCriterion("DIRECCION <", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionLessThanOrEqualTo(String value) {
            addCriterion("DIRECCION <=", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionLike(String value) {
            addCriterion("DIRECCION like", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionNotLike(String value) {
            addCriterion("DIRECCION not like", value, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionIn(List<String> values) {
            addCriterion("DIRECCION in", values, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionNotIn(List<String> values) {
            addCriterion("DIRECCION not in", values, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionBetween(String value1, String value2) {
            addCriterion("DIRECCION between", value1, value2, "direccion");
            return (Criteria) this;
        }

        public Criteria andDireccionNotBetween(String value1, String value2) {
            addCriterion("DIRECCION not between", value1, value2, "direccion");
            return (Criteria) this;
        }

        public Criteria andLongitudIsNull() {
            addCriterion("LONGITUD is null");
            return (Criteria) this;
        }

        public Criteria andLongitudIsNotNull() {
            addCriterion("LONGITUD is not null");
            return (Criteria) this;
        }

        public Criteria andLongitudEqualTo(BigDecimal value) {
            addCriterion("LONGITUD =", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudNotEqualTo(BigDecimal value) {
            addCriterion("LONGITUD <>", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudGreaterThan(BigDecimal value) {
            addCriterion("LONGITUD >", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LONGITUD >=", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudLessThan(BigDecimal value) {
            addCriterion("LONGITUD <", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LONGITUD <=", value, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudIn(List<BigDecimal> values) {
            addCriterion("LONGITUD in", values, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudNotIn(List<BigDecimal> values) {
            addCriterion("LONGITUD not in", values, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LONGITUD between", value1, value2, "longitud");
            return (Criteria) this;
        }

        public Criteria andLongitudNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LONGITUD not between", value1, value2, "longitud");
            return (Criteria) this;
        }

        public Criteria andLatitudIsNull() {
            addCriterion("LATITUD is null");
            return (Criteria) this;
        }

        public Criteria andLatitudIsNotNull() {
            addCriterion("LATITUD is not null");
            return (Criteria) this;
        }

        public Criteria andLatitudEqualTo(BigDecimal value) {
            addCriterion("LATITUD =", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudNotEqualTo(BigDecimal value) {
            addCriterion("LATITUD <>", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudGreaterThan(BigDecimal value) {
            addCriterion("LATITUD >", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("LATITUD >=", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudLessThan(BigDecimal value) {
            addCriterion("LATITUD <", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudLessThanOrEqualTo(BigDecimal value) {
            addCriterion("LATITUD <=", value, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudIn(List<BigDecimal> values) {
            addCriterion("LATITUD in", values, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudNotIn(List<BigDecimal> values) {
            addCriterion("LATITUD not in", values, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATITUD between", value1, value2, "latitud");
            return (Criteria) this;
        }

        public Criteria andLatitudNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("LATITUD not between", value1, value2, "latitud");
            return (Criteria) this;
        }

        public Criteria andEstatusIsNull() {
            addCriterion("ESTATUS is null");
            return (Criteria) this;
        }

        public Criteria andEstatusIsNotNull() {
            addCriterion("ESTATUS is not null");
            return (Criteria) this;
        }

        public Criteria andEstatusEqualTo(Short value) {
            addCriterion("ESTATUS =", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotEqualTo(Short value) {
            addCriterion("ESTATUS <>", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusGreaterThan(Short value) {
            addCriterion("ESTATUS >", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusGreaterThanOrEqualTo(Short value) {
            addCriterion("ESTATUS >=", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusLessThan(Short value) {
            addCriterion("ESTATUS <", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusLessThanOrEqualTo(Short value) {
            addCriterion("ESTATUS <=", value, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusIn(List<Short> values) {
            addCriterion("ESTATUS in", values, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotIn(List<Short> values) {
            addCriterion("ESTATUS not in", values, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusBetween(Short value1, Short value2) {
            addCriterion("ESTATUS between", value1, value2, "estatus");
            return (Criteria) this;
        }

        public Criteria andEstatusNotBetween(Short value1, Short value2) {
            addCriterion("ESTATUS not between", value1, value2, "estatus");
            return (Criteria) this;
        }

        public Criteria andImagenIsNull() {
            addCriterion("IMAGEN is null");
            return (Criteria) this;
        }

        public Criteria andImagenIsNotNull() {
            addCriterion("IMAGEN is not null");
            return (Criteria) this;
        }

        public Criteria andImagenEqualTo(String value) {
            addCriterion("IMAGEN =", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenNotEqualTo(String value) {
            addCriterion("IMAGEN <>", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenGreaterThan(String value) {
            addCriterion("IMAGEN >", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenGreaterThanOrEqualTo(String value) {
            addCriterion("IMAGEN >=", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenLessThan(String value) {
            addCriterion("IMAGEN <", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenLessThanOrEqualTo(String value) {
            addCriterion("IMAGEN <=", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenLike(String value) {
            addCriterion("IMAGEN like", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenNotLike(String value) {
            addCriterion("IMAGEN not like", value, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenIn(List<String> values) {
            addCriterion("IMAGEN in", values, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenNotIn(List<String> values) {
            addCriterion("IMAGEN not in", values, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenBetween(String value1, String value2) {
            addCriterion("IMAGEN between", value1, value2, "imagen");
            return (Criteria) this;
        }

        public Criteria andImagenNotBetween(String value1, String value2) {
            addCriterion("IMAGEN not between", value1, value2, "imagen");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoIsNull() {
            addCriterion("MONTO_APROBADO is null");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoIsNotNull() {
            addCriterion("MONTO_APROBADO is not null");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoEqualTo(BigDecimal value) {
            addCriterion("MONTO_APROBADO =", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoNotEqualTo(BigDecimal value) {
            addCriterion("MONTO_APROBADO <>", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoGreaterThan(BigDecimal value) {
            addCriterion("MONTO_APROBADO >", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MONTO_APROBADO >=", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoLessThan(BigDecimal value) {
            addCriterion("MONTO_APROBADO <", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MONTO_APROBADO <=", value, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoIn(List<BigDecimal> values) {
            addCriterion("MONTO_APROBADO in", values, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoNotIn(List<BigDecimal> values) {
            addCriterion("MONTO_APROBADO not in", values, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MONTO_APROBADO between", value1, value2, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andMontoAprobadoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MONTO_APROBADO not between", value1, value2, "montoAprobado");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaIsNull() {
            addCriterion("CANTIDAD_META is null");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaIsNotNull() {
            addCriterion("CANTIDAD_META is not null");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaEqualTo(Integer value) {
            addCriterion("CANTIDAD_META =", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaNotEqualTo(Integer value) {
            addCriterion("CANTIDAD_META <>", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaGreaterThan(Integer value) {
            addCriterion("CANTIDAD_META >", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaGreaterThanOrEqualTo(Integer value) {
            addCriterion("CANTIDAD_META >=", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaLessThan(Integer value) {
            addCriterion("CANTIDAD_META <", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaLessThanOrEqualTo(Integer value) {
            addCriterion("CANTIDAD_META <=", value, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaIn(List<Integer> values) {
            addCriterion("CANTIDAD_META in", values, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaNotIn(List<Integer> values) {
            addCriterion("CANTIDAD_META not in", values, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaBetween(Integer value1, Integer value2) {
            addCriterion("CANTIDAD_META between", value1, value2, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andCantidadMetaNotBetween(Integer value1, Integer value2) {
            addCriterion("CANTIDAD_META not between", value1, value2, "cantidadMeta");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoIsNull() {
            addCriterion("ID_TIPO_PROYECTO is null");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoIsNotNull() {
            addCriterion("ID_TIPO_PROYECTO is not null");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoEqualTo(Integer value) {
            addCriterion("ID_TIPO_PROYECTO =", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoNotEqualTo(Integer value) {
            addCriterion("ID_TIPO_PROYECTO <>", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoGreaterThan(Integer value) {
            addCriterion("ID_TIPO_PROYECTO >", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_TIPO_PROYECTO >=", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoLessThan(Integer value) {
            addCriterion("ID_TIPO_PROYECTO <", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoLessThanOrEqualTo(Integer value) {
            addCriterion("ID_TIPO_PROYECTO <=", value, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoIn(List<Integer> values) {
            addCriterion("ID_TIPO_PROYECTO in", values, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoNotIn(List<Integer> values) {
            addCriterion("ID_TIPO_PROYECTO not in", values, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoBetween(Integer value1, Integer value2) {
            addCriterion("ID_TIPO_PROYECTO between", value1, value2, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdTipoProyectoNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_TIPO_PROYECTO not between", value1, value2, "idTipoProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoIsNull() {
            addCriterion("ID_CLASIF_PROYECTO is null");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoIsNotNull() {
            addCriterion("ID_CLASIF_PROYECTO is not null");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoEqualTo(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO =", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoNotEqualTo(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO <>", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoGreaterThan(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO >", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO >=", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoLessThan(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO <", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoLessThanOrEqualTo(Integer value) {
            addCriterion("ID_CLASIF_PROYECTO <=", value, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoIn(List<Integer> values) {
            addCriterion("ID_CLASIF_PROYECTO in", values, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoNotIn(List<Integer> values) {
            addCriterion("ID_CLASIF_PROYECTO not in", values, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoBetween(Integer value1, Integer value2) {
            addCriterion("ID_CLASIF_PROYECTO between", value1, value2, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdClasifProyectoNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_CLASIF_PROYECTO not between", value1, value2, "idClasifProyecto");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioIsNull() {
            addCriterion("ID_MUNICIPIO is null");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioIsNotNull() {
            addCriterion("ID_MUNICIPIO is not null");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioEqualTo(Integer value) {
            addCriterion("ID_MUNICIPIO =", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioNotEqualTo(Integer value) {
            addCriterion("ID_MUNICIPIO <>", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioGreaterThan(Integer value) {
            addCriterion("ID_MUNICIPIO >", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_MUNICIPIO >=", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioLessThan(Integer value) {
            addCriterion("ID_MUNICIPIO <", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioLessThanOrEqualTo(Integer value) {
            addCriterion("ID_MUNICIPIO <=", value, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioIn(List<Integer> values) {
            addCriterion("ID_MUNICIPIO in", values, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioNotIn(List<Integer> values) {
            addCriterion("ID_MUNICIPIO not in", values, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioBetween(Integer value1, Integer value2) {
            addCriterion("ID_MUNICIPIO between", value1, value2, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdMunicipioNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_MUNICIPIO not between", value1, value2, "idMunicipio");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaIsNull() {
            addCriterion("ID_UNIDAD_MEDIDA is null");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaIsNotNull() {
            addCriterion("ID_UNIDAD_MEDIDA is not null");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaEqualTo(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA =", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaNotEqualTo(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA <>", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaGreaterThan(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA >", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA >=", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaLessThan(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA <", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaLessThanOrEqualTo(Integer value) {
            addCriterion("ID_UNIDAD_MEDIDA <=", value, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaIn(List<Integer> values) {
            addCriterion("ID_UNIDAD_MEDIDA in", values, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaNotIn(List<Integer> values) {
            addCriterion("ID_UNIDAD_MEDIDA not in", values, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaBetween(Integer value1, Integer value2) {
            addCriterion("ID_UNIDAD_MEDIDA between", value1, value2, "idUnidadMedida");
            return (Criteria) this;
        }

        public Criteria andIdUnidadMedidaNotBetween(Integer value1, Integer value2) {
            addCriterion("ID_UNIDAD_MEDIDA not between", value1, value2, "idUnidadMedida");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROYECTO
     *
     * @mbggenerated do_not_delete_during_merge Thu Jun 09 18:10:57 CDT 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PROYECTO
     *
     * @mbggenerated Thu Jun 09 18:10:57 CDT 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}